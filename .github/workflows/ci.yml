name: Housing ML CI
# This workflow will build and test the project on every push and pull request to the main branch.

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  # Allows manual triggering of the workflow

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Docker variables
    - name: Set up Docker variables
      id: vars
      run: |
        # Get repository name in lowercase
        # | tr '[:upper:]' '[:lower:]' converts it to 'ankitpimpalkar/housing-mlops'
        LOWER_REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')

        # IMAGE_NAME: GHCR path using lowercase repo name
        IMAGE_NAME="ghcr.io/${LOWER_REPO_NAME}"
        # IMAGE_TAG: Commit SHA ka pehla 7 chars as tag
        IMAGE_TAG=$(echo ${{ github.sha }} | cut -c 1-7)
        # Full Image Name:Tag combination
        IMAGE_FULL="${IMAGE_NAME}:${IMAGE_TAG}"

        echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_OUTPUT
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT
        echo "IMAGE_FULL=${IMAGE_FULL}" >> $GITHUB_OUTPUT

    # Step 3: Build Docker Image
    - name: Build Docker Image
      run: |
        docker build -t ${{ steps.vars.outputs.IMAGE_FULL }} .
        # docker images

    # Step 4: Log in to GitHub Container Registry
    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Step 5: Push Docker Image to GHCR 
    - name: Push Docker Image
      run: |
        docker push ${{ steps.vars.outputs.IMAGE_FULL }}
        # docker tag ... and docker push    

    # Step 6: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    # Step 7: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .

    # Step 8: Set PYTHONPATH 
    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV

    # Step 9: Run tests
    - name: Run tests
      run: |
        pytest tests/
